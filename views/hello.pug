//- pug doesn't use tags, just use the name of the tag
p Hello!

//- for nesting elements you use tabs
div
  p Hello again!
  span Hiya!

//- for classes and wrappers
div.wrapper.anotherClass
  p.anotherClass Hola!
  span#anId Woooo!

//- pug will always assume that if there is no element type that it is a div
.someCSS
  p Interesting...
  //- attributes use ( )
  img(src="dog.jpg" alt="dog")
  //- can still use classes
  img.someCSS(src="dog.jpg" alt="dog")

//- to reference a variable from the route you use #
p Hi my name is #{name} and my favorite food is #{food}!

//- putting variables into attributes use ES6 template strings, so `${ }`
img.someCSS(src="food.jpg" alt=`Food ${food}`)

//- to create variables and JS inside of the template using -
- const upFood = food.toUpperCase();
p My favorite food is #{upFood}

//- to create more modular views pug uses extends to add the partials to the page
extends layout

//- this will override the content block from the layout with whatever is in this block
block content
  p This is modular!